import Head from "next/head";
import React, { useEffect, useState } from "react";
import axios from "axios";
import { useSelector, useDispatch } from "react-redux";
import { addCurrency, removeCurrency } from "@/actions";
import { Currency } from "@/types";

export default function Home() {
  const [topCurrencies, setTopCurrencies] = useState<Currency[]>([]);
  const selectedCurrencies = useSelector((state) => state) as Currency[];
  const dispatch = useDispatch();

  useEffect(() => {
    const fetchCurrencies = async () => {
      const response = await axios.get(
        "https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=5&page=1",
      );
      setTopCurrencies(response.data);
      console.log(response.data);
    };

    fetchCurrencies();
    const intervalId = setInterval(fetchCurrencies, 60000); // update every minute

    return () => clearInterval(intervalId); // cleanup on unmount
  }, []);

  const handleSelect = (currency: Currency) => {
    dispatch(addCurrency(currency));
  };

  const handleDeselect = (currency: Currency) => {
    dispatch(removeCurrency(currency));
  };

  return (
    <>
      <Head>
        <title>Crypto Market</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <div className="flex flex-col items-center justify-center gap-12">
            <h1 className="text-2xl font-extrabold tracking-tight text-white sm:text-[4rem]">
              Following
            </h1>
            <div className="grid grid-cols-1 gap-4 sm:grid-cols-5 md:gap-8">
              {selectedCurrencies.length > 0 &&
                selectedCurrencies.map((currency) => (
                  <button
                    onClick={() => handleDeselect(currency)}
                    key={currency.id}
                    className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                  >
                    <img src={currency.image} alt={currency.name} width={30} />
                    <p>
                      {currency.name}: {currency.current_price}$
                    </p>
                    <p>Unfollow</p>
                  </button>
                ))}
            </div>
          </div>
          <div className="flex flex-col items-center justify-center gap-12">
            <h3 className="text-xl font-extrabold tracking-tight text-white sm:text-[2rem]">
              Top 5 Cryptocurrencies
            </h3>
            <div className="grid grid-cols-1 gap-4 sm:grid-cols-5 md:gap-8">
              {topCurrencies.map((currency) => (
                <button
                  onClick={() => handleSelect(currency)}
                  key={currency.id}
                  className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                >
                  <img src={currency.image} alt={currency.name} width={30} />
                  <p>{currency.name}</p>
                  <p>Follow</p>
                </button>
              ))}
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
